generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/prisma/chatting"
}

datasource db {
  provider = "postgresql"
  url      = env("CHATTING_DATABASE_URL")
}

model ChatRoom {
  id              String           @id @db.Uuid
  createdAt       DateTime
  chats           Chat[]
  meetingChatRoom MeetingChatRoom?
}

model MeetingChatRoom {
  id         String   @id @db.Uuid
  meetingId  String   @db.Uuid
  chatRoomId String   @unique @db.Uuid
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
}

model Chat {
  id         String   @id @db.Uuid
  senderId   String   @db.Uuid
  chatRoomId String   @db.Uuid
  contentId  String   @unique @db.Uuid
  message    String
  createdAt  DateTime
  deleted    Boolean
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  content    Content  @relation(fields: [contentId], references: [id])
}

model Content {
  id             String                     @id @db.Uuid
  type           ContentType
  chat           Chat?
  file           ChatContentFile?
  multipleImages ChatContentMultipleImage[]
}

model ChatContentMultipleImage {
  id        String  @id @db.Uuid
  fileId    String  @db.Uuid
  contentId String  @db.Uuid
  content   Content @relation(fields: [contentId], references: [id])
}

model ChatContentFile {
  id        String   @id @db.Uuid
  contentId String   @unique @db.Uuid
  fileUrl   String   @db.VarChar(300)
  createdAt DateTime
  content   Content  @relation(fields: [contentId], references: [id])
}

enum ContentType {
  VIDEO
  IMAGE
  MULTIPLE_IMAGE
  PLACE
  VOTE
}
